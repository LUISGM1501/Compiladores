$* 
  24_Prueba_Com_Bloque.ne
  Propósito: Verificar el reconocimiento de comentarios de bloque en Notch Engine
  Fecha: 28/04/2025
  Sintaxis: $* comentario *$
*$

WorldName PruebaComBloque:

$* Este es un comentario de bloque 
   al inicio del archivo
   que ocupa varias líneas *$

Bedrock

    $* Comentario de bloque 
       dentro de la sección de constantes *$
    Obsidian Stack MAX_LEVEL 100;
    Obsidian Spider VERSION $* Comentario en medio de una declaración *$ "1.0";

Inventory

    $* 
    Comentario de bloque al inicio
    de la sección de variables 
    *$
    
    Stack contador = $* Comentario en medio de una asignación *$ 0;
    
    $* Comentario
       antes de
       una declaración *$
    Spider texto = "Notch Engine";
    
    Rune inicial; $* Comentario de bloque después de una declaración *$
    
    $* Comentario de bloque con caracteres especiales:
       !@#$%^&*()_+-=[]{}|;:'",.<>/?
       Números: 1234567890
       Palabras reservadas: PolloCrudo PolloAsado repeater craft target
       Operadores: + - * / % < > <= >= is isNot and or not
    *$
    
    $* Comentario con saltos
    
    de
    
    línea *$
    
    Stack a = 10, $* Comentario entre
                     declaraciones
                     múltiples *$ b = 20;
    
    $* Comentario con tabulaciones
    	Línea con tabulación
    		Línea con doble tabulación
    *$

Recipe

    $* Comentario de bloque
       en sección de prototipos *$
    Spell calcular(Stack :: a, b) -> Stack;

CraftingTable

    $* Comentario de bloque al inicio de la sección de rutinas *$
    
    Spell calcular(Stack :: a, b) -> Stack
    PolloCrudo
        $* Comentario de bloque
           dentro de un bloque de función *$
        Stack resultado = a + b;
        respawn resultado;
    PolloAsado
    
    Ritual mostrarMensaje(Spider :: mensaje)
    PolloCrudo
        $* Comentario al inicio
           de un procedimiento *$
        dropperSpider(mensaje);
    PolloAsado $* Comentario de bloque al final de un bloque *$

SpawnPoint

    PolloCrudo
        $* Comentario de bloque 
           al inicio del punto de entrada *$
        
        contador = 5 $* Comentario en medio
                        de una expresión *$ + 10;
        
        target contador > $* Comentario dentro
                             de una condición *$ 0 craft hit
        PolloCrudo
            dropperSpider("Contador positivo");
        PolloAsado
        
        $* Casos especiales para probar el scanner *$
        
        $* Comentario con símbolo $ dentro *$
        
        $* Comentario con símbolo * dentro *$
        
        $* Comentario con la secuencia *$ dentro pero sin cerrar aún *$
        
        $* Comentario con la secuencia $* dentro pero sin iniciar uno nuevo *$
        
        $* Comentario con múltiples
            $* estos no deberían iniciar
               nuevos comentarios *$
            secuencias $* anidadas *$
        *$
        
        $* Comentario con
           múltiples líneas
           
           y líneas en blanco
           
           y más contenido
        *$
        
        $* Comentario justo antes de un comentario de línea *$ $$ Comentario de línea
        
        $* 
           Comentario muy largo para probar límites del buffer
           ........................................................................
           ........................................................................
           ........................................................................
           ........................................................................
           ........................................................................
           ........................................................................
           ........................................................................
           ........................................................................
           ........................................................................
           ........................................................................
        *$
    PolloAsado

$* Comentario de bloque 
   antes del cierre del programa *$

worldSave $* Comentario de bloque después del cierre del programa *$

$* Comentario de bloque después de todo el programa *$
