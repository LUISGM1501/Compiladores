$* 
  Prueba_Err_CaracterInvalido.ne
  Propósito: Verificar detección de caracteres no permitidos en el lenguaje Notch Engine
  Fecha: 28/04/2025
*$

WorldName PruebaCaracteresInvalidos:

Bedrock

    $$ Constantes normales para comparación
    Obsidian Stack NORMAL 100;
    
    $$ Caracteres Unicode que no deberían ser permitidos en identificadores
    Obsidian Stack ÑANDU 200;
    Obsidian Stack AÇÚCAR 300;
    Obsidian Stack CAFÉ 400;

Inventory

    $$ Variables normales para contraste
    Stack contador = 0;
    Spider mensaje = "Normal";
    
    $$ Variables con caracteres inválidos en identificadores
    Stack año = 2025;
    Stack piña = 10;
    Spider münzen = "Monedas";
    Spider öffentlich = "Público";
    
    $$ Caracteres invisibles o de control en identificadores
    Stack cont␇ador = 5;
    Spider mens␣aje = "Texto";
    
    $$ Emojis y otros símbolos Unicode en identificadores
    Stack contador😀 = 10;
    Spider mensaje📱 = "Texto";
    Stack 💰monedas = 100;
    
    $$ Caracteres ASCII extendidos en identificadores
    Stack valor¢ = 50;
    Spider texto© = "Copyright";
    
    $$ Literales string con caracteres Unicode
    Spider texto_unicode = "Caracteres especiales: áéíóúñÁÉÍÓÚÑ";
    Spider texto_emoji = "Emojis: 😀🎮🌍💻";
    
    $$ Símbolos inválidos que no son operadores válidos en el lenguaje
    Stack a ∆ b;
    Stack c ± d;
    
    $$ Caracteres inválidos fuera de contexto
    Stack e § f;
    Stack g ¶ h;
    
    $$ Backslash inválido fuera de string o char
    Stack valor \ otro;
    
    $$ Caracteres ASCII de control visibles
    Stack valor␀contador = 5;
    Stack otro␊valor = 10;
    
    $$ Literales carácter con caracteres inválidos
    Rune char_1 = '€';
    Rune char_2 = '✓';

SpawnPoint

    PolloCrudo
        $$ Código normal para referencia
        contador = 1;
        
        $$ Operadores inválidos en expresiones
        contador = contador × 2;
        contador = contador ÷ 2;
        
        $$ Uso de variables con nombres inválidos
        dropperStack(año);
        dropperSpider(texto_unicode);
        
        $$ Caracteres inválidos en líneas de código
        contador = 5 → 10;
        contador = 5 ∧ 10;
        
        $$ Caracteres de tabulación vertical o formfeed
        contador = 5;
        contador = contador + 5;
        
        $$ Instrucción normal para finalizar
        dropperSpider("Fin de prueba");
    PolloAsado

worldSave
