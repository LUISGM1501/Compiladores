$* 
   Prueba: 42_Prueba_Comb_Control
   Descripción: Verificar estructuras de control anidadas
   Lenguaje: Notch Engine
*$

WorldName PruebaControlAnidado:

Inventory {
    $$ Variables para las pruebas
    Stack contador = 0;
    Stack max_iteraciones = 5;
    Stack resultado = 0;
    
    Stack opcion = 2;
    Torch condicion1 = On;
    Torch condicion2 = Off;
    
    Spider mensaje = "Estructuras de control anidadas";
    Spider resultado_texto = "";
    
    Shelf[5] Stack matriz = [1, 2, 3, 4, 5];
    
    Entity Personaje {
        Spider nombre;
        Stack nivel;
        Torch activo;
    };
    
    Entity Personaje jugador;
}

SpawnPoint {
    dropperSpider(mensaje);
    jugador@nombre = "Steve";
    jugador@nivel = 1;
    jugador@activo = On;
    
    $$ 1. Condicionales anidados (if-then-else)
    target jugador@nivel >= 1 craft hit
    PolloCrudo
        dropperSpider("Nivel suficiente para comenzar");
        
        target jugador@activo craft hit
        PolloCrudo
            dropperSpider("Jugador activo");
            
            target jugador@nombre is "Steve" craft hit
            PolloCrudo
                dropperSpider("Bienvenido, Steve!");
                soulsand jugador@nivel;
            PolloAsado
            miss
            PolloCrudo
                dropperSpider("Bienvenido, jugador desconocido");
            PolloAsado
        PolloAsado
        miss
        PolloCrudo
            dropperSpider("Jugador inactivo. Activando...");
            jugador@activo = On;
        PolloAsado
    PolloAsado
    miss
    PolloCrudo
        dropperSpider("Nivel insuficiente para comenzar");
    PolloAsado
    
    $$ 2. Switch anidado dentro de if
    target opcion > 0 craft hit
    PolloCrudo
        jukebox opcion craft
        disc 1:
        PolloCrudo
            dropperSpider("Opción 1 seleccionada");
            
            target condicion1 craft hit
            PolloCrudo
                dropperSpider("Subopción A");
            PolloAsado
            miss
            PolloCrudo
                dropperSpider("Subopción B");
            PolloAsado
        PolloAsado
        
        disc 2:
        PolloCrudo
            dropperSpider("Opción 2 seleccionada");
            
            jukebox jugador@nivel craft
            disc 1:
            PolloCrudo
                dropperSpider("Nivel básico");
            PolloAsado
            disc 2:
            PolloCrudo
                dropperSpider("Nivel intermedio");
            PolloAsado
            silence:
            PolloCrudo
                dropperSpider("Nivel desconocido");
            PolloAsado
        PolloAsado
        
        silence:
        PolloCrudo
            dropperSpider("Opción no reconocida");
        PolloAsado
    PolloAsado
    
    $$ 3. Bucles anidados - while dentro de for
    walk i set 0 to 2 craft
    PolloCrudo
        dropperSpider("Iteración de for principal: " bind i);
        Stack j = 0;
        
        repeater j < 3 craft
        PolloCrudo
            dropperSpider("  Subiteración de while: " bind j);
            resultado += (i * 10 + j);
            soulsand j;
        PolloAsado
    PolloAsado
    
    dropperSpider("Resultado acumulado: " bind resultado);
    
    $$ 4. Bucle do-while con if anidado
    contador = 0;
    resultado = 0;
    
    spawner
    PolloCrudo
        soulsand contador;
        dropperSpider("Iteración do-while: " bind contador);
        
        target contador % 2 is 0 craft hit
        PolloCrudo
            dropperSpider("  Número par detectado");
            resultado += contador;
        PolloAsado
        miss
        PolloCrudo
            dropperSpider("  Número impar detectado");
            resultado += contador * 2;
        PolloAsado
    PolloAsado
    exhausted contador >= max_iteraciones;
    
    dropperSpider("Resultado tras do-while: " bind resultado);
    
    $$ 5. Bucles for anidados con break y continue
    resultado = 0;
    
    walk i set 0 to 5 craft
    PolloCrudo
        target i is 3 craft hit
        PolloCrudo
            dropperSpider("Saltando iteración i=3");
            enderPearl;
        PolloAsado
        
        dropperSpider("For externo: " bind i);
        
        walk j set 0 to 3 craft
        PolloCrudo
            target i is 4 and j > 1 craft hit
            PolloCrudo
                dropperSpider("  Terminando loop interno en i=4, j=" bind j);
                creeper;
            PolloAsado
            
            resultado += (i + j);
            dropperSpider("  For interno: j=" bind j bind ", suma acumulada=" bind resultado);
        PolloAsado
    PolloAsado
    
    $$ 6. Combinación compleja: with dentro de if-else dentro de while
    contador = 0;
    resultado = 0;
    
    repeater contador < 3 craft
    PolloCrudo
        soulsand contador;
        dropperSpider("Iteración while principal: " bind contador);
        
        target contador % 2 is 0 craft hit
        PolloCrudo
            wither jugador craft
            PolloCrudo
                activo = Off;
                dropperSpider("  " bind nombre bind " desactivado temporalmente");
                
                spawner
                PolloCrudo
                    soulsand nivel;
                    dropperSpider("    Incrementando nivel: " bind nivel);
                PolloAsado
                exhausted nivel > contador + 2;
                
                activo = On;
                dropperSpider("  " bind nombre bind " reactivado con nivel " bind nivel);
            PolloAsado
        PolloAsado
        miss
        PolloCrudo
            Stack temp_nivel = jugador@nivel;
            
            repeater temp_nivel > 0 craft
            PolloCrudo
                dropperSpider("  Reduciendo nivel temporal: " bind temp_nivel);
                target temp_nivel is 1 craft hit
                PolloCrudo
                    dropperSpider("  Nivel mínimo alcanzado");
                    creeper;
                PolloAsado
                magma temp_nivel;
            PolloAsado
        PolloAsado
    PolloAsado
    
    $$ 7. Estructuras de control con expresiones complejas en las condiciones
    walk i set 0 to matriz[2] + matriz[4] // 2 craft
    PolloCrudo
        target (i * 2 <= matriz[i % 5]) and ((i % 2 is 0) or (i is matriz[0])) craft hit
        PolloCrudo
            dropperSpider("Condición compleja satisfecha en i=" bind i);
            resultado += i;
        PolloAsado
    PolloAsado
    
    dropperSpider("Resultado final: " bind resultado);
    
    $$ 8. Instrucción ragequit condicionada anidada
    target contador >= max_iteraciones and resultado < 100 craft hit
    PolloCrudo
        target jugador@nivel < 5 craft hit
        PolloCrudo
            dropperSpider("Condiciones críticas alcanzadas. Terminando programa.");
            ragequit;
        PolloAsado
    PolloAsado
    
    dropperSpider("Programa completado con éxito.");
}

worldSave