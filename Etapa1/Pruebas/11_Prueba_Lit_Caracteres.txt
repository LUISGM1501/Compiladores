$* 
  Prueba_Lit_Caracteres.ne
  Propósito: Verificar reconocimiento de caracteres (letras, dígitos, símbolos, escapes)
  Fecha: Abril 10, 2025
*$

$$ Prueba de literales de caracteres en NotchEngine
$$ Verificando: letras, dígitos, símbolos y secuencias de escape

WorldName PruebaLitCaracteres:

Bedrock {
    $$ Constantes de caracteres
    Obsidian Rune LETRA_A 'A';
    Obsidian Rune LETRA_Z 'Z';
    Obsidian Rune DIGITO_0 '0';
    Obsidian Rune DIGITO_9 '9';
    Obsidian Rune NUEVA_LINEA '\n';
    Obsidian Rune TABULACION '\t';
}

Inventory {
    $$ Letras mayúsculas
    Rune letraA = 'A';
    Rune letraB = 'B';
    Rune letraC = 'C';
    Rune letraZ = 'Z';
    
    $$ Letras minúsculas
    Rune letraMina = 'a';
    Rune letraMinb = 'b';
    Rune letraMinc = 'c';
    Rune letraMinz = 'z';
    
    $$ Dígitos
    Rune digito0 = '0';
    Rune digito1 = '1';
    Rune digito5 = '5';
    Rune digito9 = '9';
    
    $$ Símbolos comunes
    Rune simboloExclamacion = '!';
    Rune simboloInterrogacion = '?';
    Rune simboloArroba = '@';
    Rune simboloNumeral = '#';
    Rune simboloDolar = '$';
    Rune simboloPorcentaje = '%';
    Rune simboloAmpersand = '&';
    Rune simboloAsterisco = '*';
    Rune simboloParentesisIzq = '(';
    Rune simboloParentesisDer = ')';
    Rune simboloGuion = '-';
    Rune simboloGuionBajo = '_';
    Rune simboloIgual = '=';
    Rune simboloMas = '+';
    Rune simboloCorcheteIzq = '[';
    Rune simboloCorcheteDer = ']';
    Rune simboloLlaveIzq = '{';
    Rune simboloLlaveDer = '}';
    Rune simboloPuntoyComa = ';';
    Rune simboloDosPuntos = ':';
    Rune simboloComillaSimple = '\'';
    Rune simboloComillaDoble = '"';
    Rune simboloBarra = '/';
    Rune simboloBarraInversa = '\\';
    Rune simboloBarraVertical = '|';
    Rune simboloComa = ',';
    Rune simboloPunto = '.';
    Rune simboloMenorQue = '<';
    Rune simboloMayorQue = '>';
    
    $$ Secuencias de escape
    Rune escapeNuevaLinea = '\n';
    Rune escapeTabulacion = '\t';
    Rune escapeRetornoCarro = '\r';
    Rune escapeBarraInversa = '\\';
    Rune escapeComillaSimple = '\'';
    Rune escapeComillaDoble = '\"';
}

SpawnPoint {
    PolloCrudo
        $$ Mostrar algunos caracteres
        dropperSpider("Letras mayúsculas: ");
        dropperRune(letraA);
        dropperRune(letraB);
        dropperRune(letraC);
        
        dropperSpider("Letras minúsculas: ");
        dropperRune(letraMina);
        dropperRune(letraMinb);
        dropperRune(letraMinc);
        
        dropperSpider("Dígitos: ");
        dropperRune(digito0);
        dropperRune(digito1);
        dropperRune(digito5);
        dropperRune(digito9);
        
        dropperSpider("Símbolos: ");
        dropperRune(simboloExclamacion);
        dropperRune(simboloInterrogacion);
        dropperRune(simboloArroba);
        dropperRune(simboloNumeral);
        
        $$ Pruebas de acceso a caracteres en strings
        Spider texto = "NotchEngine";
        Rune primerCaracter = texto[0];       $$ 'N'
        Rune ultimoCaracter = texto[10];      $$ 'e'
        
        dropperSpider("Primer carácter de 'NotchEngine': ");
        dropperRune(primerCaracter);
        
        dropperSpider("Último carácter de 'NotchEngine': ");
        dropperRune(ultimoCaracter);
        
        $$ Pruebas de operaciones con caracteres
        Rune letraMinuscula = 'a';
        Rune letraMayuscula = etchUp(letraMinuscula);    $$ 'A'
        
        dropperSpider("Minúscula: ");
        dropperRune(letraMinuscula);
        
        dropperSpider("Convertida a mayúscula: ");
        dropperRune(letraMayuscula);
        
        letraMinuscula = etchDown(letraMayuscula);      $$ 'a'
        
        dropperSpider("Convertida nuevamente a minúscula: ");
        dropperRune(letraMinuscula);
        
        $$ Verificaciones de tipo de carácter
        Torch esLetra = isEngraved('A');       $$ On
        Torch esDigito = isInscribed('5');     $$ On
        
        dropperSpider("¿'A' es una letra? ");
        dropperTorch(esLetra);
        
        dropperSpider("¿'5' es un dígito? ");
        dropperTorch(esDigito);
        
        esLetra = isEngraved('7');            $$ Off
        esDigito = isInscribed('K');          $$ Off
        
        dropperSpider("¿'7' es una letra? ");
        dropperTorch(esLetra);
        
        dropperSpider("¿'K' es un dígito? ");
        dropperTorch(esDigito);
        
        $$ Convertir carácter a valor ASCII (entero)
        Stack valorAsciiA = letraA >> Stack;    $$ 65
        
        dropperSpider("Valor ASCII de 'A': " bind valorAsciiA);
    PolloAsado
}

worldSave