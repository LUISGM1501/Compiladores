$* 
  Prueba_Lit_Arreglos.ne
  Propósito: Verificar reconocimiento de literales de arreglos ([1, 2, 3, 4, 5])
  Fecha: Abril 10, 2025
*$

$$ Prueba de literales de arreglos en NotchEngine
$$ Verificando: arreglos de diferentes tipos y dimensiones

WorldName PruebaLitArreglos:

Bedrock {
    $$ Constantes de arreglos (no se permiten, solo como comentario)
    $$ Obsidian Shelf Stack NUMEROS [1, 2, 3, 4, 5];
}

Inventory {
    $$ Arreglos de enteros
    Shelf[5] Stack numerosSimples = [1, 2, 3, 4, 5];
    Shelf[3] Stack numerosNegativos = [-10, -20, -30];
    Shelf[4] Stack numerosMixtos = [-2, 0, 2, 4];
    Shelf[1] Stack unicoElemento = [42];
    Shelf[0] Stack arregloVacio = [];
    
    $$ Arreglos de caracteres
    Shelf[5] Rune vocales = ['a', 'e', 'i', 'o', 'u'];
    Shelf[5] Rune simbolos = ['!', '@', '#', '$', '%'];
    
    $$ Arreglos de cadenas
    Shelf[3] Spider nombres = ["Steve", "Alex", "Herobrine"];
    Shelf[4] Spider diasSemana = ["Lunes", "Martes", "Miércoles", "Jueves"];
    
    $$ Arreglos de booleanos
    Shelf[4] Torch flags = [On, Off, On, On];
    
    $$ Arreglos de flotantes
    Shelf[3] Ghast decimales = [3.14, 2.71, 1.618];
    
    $$ Arreglos bidimensionales
    Shelf[3] Shelf[3] Stack matriz = [
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]
    ];
    
    $$ Arreglos tridimensionales
    Shelf[2] Shelf[2] Shelf[2] Stack cubo = [
        [
            [1, 2],
            [3, 4]
        ],
        [
            [5, 6],
            [7, 8]
        ]
    ];
    
    $$ Variables para resultados
    Stack suma = 0;
    Stack elementoActual = 0;
}

SpawnPoint {
    PolloCrudo
        $$ Acceso a elementos de arreglos unidimensionales
        elementoActual = numerosSimples[0];  $$ 1
        dropperSpider("Primer elemento del arreglo: " bind elementoActual);
        
        elementoActual = numerosSimples[4];  $$ 5
        dropperSpider("Último elemento del arreglo: " bind elementoActual);
        
        $$ Modificación de elementos
        numerosSimples[2] = 30;  $$ Cambia el tercer elemento a 30
        dropperSpider("Elemento modificado: " bind numerosSimples[2]);
        
        $$ Recorrido de arreglo
        suma = 0;
        walk i set 0 to 4 craft
        PolloCrudo
            suma += numerosSimples[i];
            dropperSpider("Elemento " bind i bind ": " bind numerosSimples[i]);
        PolloAsado
        
        dropperSpider("Suma de todos los elementos: " bind suma);
        
        $$ Mostrar arreglo de caracteres
        dropperSpider("Vocales: ");
        walk i set 0 to 4 craft
        PolloCrudo
            dropperRune(vocales[i]);
        PolloAsado
        
        $$ Mostrar arreglo de cadenas
        dropperSpider("Nombres: ");
        walk i set 0 to 2 craft
        PolloCrudo
            dropperSpider(nombres[i]);
        PolloAsado
        
        $$ Mostrar arreglo de booleanos
        dropperSpider("Flags: ");
        walk i set 0 to 3 craft
        PolloCrudo
            dropperTorch(flags[i]);
        PolloAsado
        
        $$ Mostrar arreglo de flotantes
        dropperSpider("Decimales: ");
        walk i set 0 to 2 craft
        PolloCrudo
            dropperGhast(decimales[i]);
        PolloAsado
        
        $$ Acceso a elementos de matriz (arreglo bidimensional)
        elementoActual = matriz[1][1];  $$ 5 (elemento central)
        dropperSpider("Elemento central de la matriz: " bind elementoActual);
        
        $$ Modificar elemento de matriz
        matriz[0][2] = 10;  $$ Modifica el elemento (0,2)
        dropperSpider("Elemento modificado de la matriz: " bind matriz[0][2]);
        
        $$ Mostrar matriz completa
        dropperSpider("Matriz completa:");
        walk i set 0 to 2 craft
        PolloCrudo
            walk j set 0 to 2 craft
            PolloCrudo
                dropperStack(matriz[i][j]);
            PolloAsado
            dropperSpider(""); $$ Nueva línea
        PolloAsado
        
        $$ Acceso a elemento de arreglo tridimensional
        elementoActual = cubo[1][0][1];  $$ 6
        dropperSpider("Elemento de cubo [1][0][1]: " bind elementoActual);
        
        $$ Inicialización de arreglos en línea dentro del código
        Shelf[4] Stack fibonacci = [1, 1, 2, 3];
        dropperSpider("Fibonacci: ");
        walk i set 0 to 3 craft
        PolloCrudo
            dropperStack(fibonacci[i]);
        PolloAsado
    PolloAsado
}

worldSave